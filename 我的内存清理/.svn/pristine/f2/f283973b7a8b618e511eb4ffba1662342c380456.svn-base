package com.shaung.ramclear;

import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.view.annotation.ViewInject;

import android.os.Bundle;
import android.app.Activity;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Matrix;
import android.graphics.Paint;
import android.view.Menu;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnTouchListener;
import android.widget.ImageView;

public class JumpActivity extends Activity {

	@ViewInject(R.id.iv_jump_me)
	private ImageView iv_jump_me;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_jump);
		ViewUtils.inject(this);


		iv_jump_me.setOnTouchListener(new OnTouchListener() {

			private int startx;
			private int starty;
			private int kx;
			private int ky;
			private Bitmap bitmap;

			@Override
			public boolean onTouch(View v, MotionEvent event) {
				switch (event.getAction()) {
				case MotionEvent.ACTION_DOWN:

					startx = (int) event.getRawX();
					starty = (int) event.getRawY();
					kx=startx;
					ky=starty;
					System.out.println("按下了");
					break;

				case MotionEvent.ACTION_MOVE:

					System.out.println("移动了");
					int endx=(int) event.getRawX();
					int endy=(int) event.getRawY();

					float asin=0;
					double atan=0;
					//计算斜率
					try{
						atan=(endy-ky)/(endx-kx);
						System.out.println("反tan:"+atan);
					}catch (Exception e) {
						atan=-404;
					}
					//判断是否特殊
					boolean flag=false;
					//计算旋转角度
					if(atan==-404){//垂直不旋转
						System.out.println("垂直不旋转");
						if(endy>ky){
							asin=180;
						}else{
							asin=0;
						}
				
					}else if(atan==0){
						System.out.println("横向移动:"+asin);
						if(endx>kx){
							asin=90;
						}else{
							asin=-90;
						}
					}else{
						flag=true;
						asin =(float) Math.toDegrees(Math.atan(atan));
						System.out.println("偏移角度:"+asin);
					}
					//定位角度
					if(flag){
						//左右上下
						if(endy>starty){
							if(atan>0){
								asin+=90;
								System.out.println("右下方向"+asin);
							}else{
								asin-=90;
								System.out.println("左下方向"+asin);
							}
						}else{
							if(atan>0){
								asin=-asin;
								System.out.println("左上方向"+-asin);
							}else{
								asin=-asin;
								System.out.println("右上方向"+asin);
							}
						}
					}
				

					bitmap = BitmapFactory.decodeResource(getResources(),R.drawable.ic_launcher);
					//1,创建父模板
					Bitmap bitmapFu = Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), bitmap.getConfig());
					//2,为父模板创建画布
					Canvas canvas = new Canvas(bitmapFu);
					//3,设置旋转矩阵
					Matrix mx=new Matrix();
					mx.setRotate(asin, bitmap.getWidth()/2, bitmap.getHeight()/2);
					//4,设置画笔
					Paint p=new Paint();
					canvas.drawBitmap(bitmap, mx, p);
					//5,设置图片
					iv_jump_me.setImageBitmap(bitmapFu);
					//6,移动位置
					float divX=endx-startx;
					float divY=endy-starty;
					//原先的
					int top = iv_jump_me.getTop();
					int left = iv_jump_me.getLeft();
					//4.2移动相应的偏移量
					left+=divX;
					top+=divY;
					int right=left+iv_jump_me.getWidth();
					int bottom=top+iv_jump_me.getHeight();
					iv_jump_me.layout(left,top,right, bottom);
					//7,变换起始位置
					kx=endx;
					ky=endy;
					startx=endx;
					starty=endy;
					break;
				case MotionEvent.ACTION_UP:

					kx=(int) event.getRawX();
					ky=(int) event.getRawY();
					iv_jump_me.setImageBitmap(bitmap);
					break;
				default:
					break;
				}

				return true;
			}
		});

	}

}
